<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Houses in Kukatpally</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .navbar {
            background-color: #423b99;
            border-bottom-left-radius: 30px;
            border-bottom-right-radius: 30px;
            color: white;
        }

        .navbar .navbar-brand, .navbar .nav-link {
            color: white;

        }

        .navbar .nav-link:hover {
            color: #d1e7fd;
        }

        .filter-section {
            margin-top: 0;
            padding: 10px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 10px;
        }

        .filter-section select {
            width: auto;
            padding: 12px 15px;
            border-radius: 8px;
            border: 1px solid #ced4da;
            font-size: 1rem;
        }

        .filter-section .btn-primary {
            padding: 12px 15px;
            font-size: 1rem;
        }

        .property-map-container {
            display: flex;
            gap: 20px;
            justify-content: space-between;
            margin-top: 20px;
        }

        .property-details-container {
            flex: 0 0 60%;
        }

        .map-container {
            flex: 0 0 40%;
            height: 400px;
            background-color: #eeeeee;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        }
      
    /* Styling for the carousel and transition effect */
    .carousel-inner {
        height: 300px;
        overflow: hidden;

    }

    .carousel-item {
        height: 100%;
        transition: transform 0.5s ease-in-out; /* Smooth transition */
    }

    .carousel-item img {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ensures images cover the container without stretching */
        transition: transform 0.5s ease-in-out; /* Smooth transition for image changes */
    }

    .carousel-item-next, .carousel-item-prev, .carousel-item.active {
        transition: transform 0.15s ease-in-out; /* Smooth transition for slide-in */
    }


       
        .property-card {
            display: flex;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
            padding: 15px;
            margin-bottom: 20px;
        }

        .property-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .property-card img {
            max-width: 250px;
            border-radius: 8px;
        }

        .property-details {
            margin-left: 20px;
            flex: 1;
        }

        .property-details h3 {
            font-size: 1.2rem;
            color: #007bff;
        }

        .property-details .price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #28a745;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .action-buttons a {
            text-decoration: none;
            padding: 15px 15px;
            color: white;
            border-radius: 5px;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        .action-buttons a.btn-view {
            background-color: #007bff;
        }

        .action-buttons a.btn-view:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

        .action-buttons a.btn-contact {
            background-color: #28a745;
        }

        .action-buttons a.btn-contact:hover {
            background-color: #1e7e34;
            transform: scale(1.05);
        }
        .contact-form {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
            width: 400px;
            z-index: 1000;
        }

        /* Close button styling */
        .contact-form .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 30px;
            height: 30px;
            background-color: white;
            border: 1px solid #ddd;
            color: black;
            font-size: 18px;
            font-weight: bold;
            border-radius: 50%;
            text-align: center;
            line-height: 28px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .contact-form .close-btn:hover {
            background-color: rgba(255, 250, 250, 0.1);
            color: rgb(11, 11, 11);
        }

        /* Form styling */
        .contact-form h3 {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: #007bff;
        }

        .contact-form label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

        .contact-form input,
        .contact-form textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: 1rem;
        }

        .contact-form button {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
            border: none;
            border-radius: 5px;
            color: white;
            background-color: #28a745;
            transition: background-color 0.3s ease;
        }

        .contact-form button:hover {
            background-color: #1e7e34;
        }

        /* Overlay background */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
        .alert-message {
    display: none;
    margin-top: 5px;
    padding: 20px;
    background-color: #28a745; /* Green color for success */
    color: white;
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    font-size: 1rem;
    font-weight: bold;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
    width: 600px;
    margin-left: 400px;
    margin-right: 200px;
}

.alert-message.success {
    background-color: #28a745; /* Success green */
}

.alert-message.error {
    background-color: #dc3545; /* Error red */
}

.alert-message.info {
    background-color: #17a2b8; /* Info blue */
}

.alert-message.warning {
    background-color: #ffc107; /* Warning yellow */
}

.alert-message .close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    color: white;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: color 0.3s ease;
}

.alert-message .close-btn:hover {
    color: #aaa;
}

.alert-message.show {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

    </style>
</head>
<body>
    
    <nav class="navbar navbar-expand-lg navbar-light">
        <div style="margin-left: 20px;color: white;">
            <i class="bi bi-house-door"></i>
            <h5><a href="\home" style="color: white;text-decoration: none;">HouseWorth</a></h5>
        </div>
    </nav>
    <!-- Alert Message Box -->
<div id="alertMessage" class="alert-message">
    <button class="close-btn" onclick="closeAlert()">Ã—</button>
    <span id="alertMessageText">Your contact details have been saved successfully!</span>
</div>

<script>
    // Function to show the alert box
function showAlert(message, type = 'success') {
    const alertBox = document.getElementById('alertMessage');
    const alertText = document.getElementById('alertMessageText');
    
    alertText.textContent = message;
    alertBox.classList.remove('success', 'error', 'info', 'warning');
    alertBox.classList.add(type);
    alertBox.classList.add('show');
}

// Function to close the alert box
function closeAlert() {
    const alertBox = document.getElementById('alertMessage');
    alertBox.classList.remove('show');
}

</script>

    <div class="container">
        <!-- Filter Section -->
        <div class="filter-section">
            <select id="location" class="form-select me-2" style="width: 220px;">
                <option value="">Location</option>
                <option value="Kukatpally">Kukatpally</option>
                <option value="Ameerpet">Ameerpet</option>
                <option value="Jubliee Hills">Jubliee Hills</option>
                <!-- Add more locations as needed -->
            </select>
            <select id="propertyType" class="form-select me-2" style="width: 220px;">
                <option value="">Property Type</option>
                <option value="apartment">Apartment</option>
                <option value="villa">Villa</option>
                <option value="plot">Plot</option>
            </select>
            <select id="flatType" class="form-select me-2" style="width: 150px;">
                <option value="">Flat Type</option>
                <option value="1BHK">1BHK</option>
                <option value="2BHK">2BHK</option>
                <option value="3BHK">3BHK</option>
            </select>
            <select id="priceRange" class="form-select me-2" style="width: 180px;">
                <option value="">Price Range</option>
                <option value="0-50L">â‚¹0 - â‚¹50L</option>
                <option value="50L-1Cr">â‚¹50L - â‚¹1Cr</option>
                <option value="1Cr-Above">â‚¹1Cr+</option>
            </select>
            <button type="button" class="btn btn-primary" onclick="applyFilters()" style="background-color: papayawhip;border-color: black;color: black;">Apply Filters</button>
        </div>

        <!-- Property Listings -->
        <div class="property-map-container">
            <div class="property-details-container" id="property-listings">
                <!-- Properties will be injected here -->
                <% properties.forEach(function(property) { %>
                    <div class="property-card">
                        <!-- Image Carousel -->
                        <div id="carousel<%= property._id %>" class="carousel slide" data-bs-ride="carousel"data-bs-interval="10000">
                            <div class="carousel-inner">
                                <% if (property.images && Array.isArray(property.images) && property.images.length > 0) { %>
                                    <% property.images.forEach(function(image, index) { %>
                                        <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                            <img src="<%= image %>" class="d-block w-100" alt="Property Image">
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="carousel-item active">
                                        <img src="default-image.jpg" class="d-block w-100" alt="Default Image">
                                    </div>
                                <% } %>
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carousel<%= property._id %>" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carousel<%= property._id %>" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                        
                        <!-- Property Details -->
                        <div class="property-details">
                            <h3><%= property.location %> - <%= property.flatType %></h3>
                            <p class="price">â‚¹<%= property.price.toLocaleString() %></p>
                            <p><strong>House Type:</strong> <%= property.houseType %></p>
                            <p><strong>Contact:</strong> <%= property.contact %></p>
                            <p><strong>E-mail:</strong> <%= property.email %></p>
                            <p><%= property.description %></p>
                            <div class="action-buttons">
                                
                                <button class="btn btn-primary" onclick="openContactForm()">Contact Seller</button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Map Section -->
            <div class="map-container">
                <div id="map" style="width: 100%; height: 100%;"></div>
            </div>
        </div>
    </div>
    <script>
    // Fetch initial properties when the page loads
    window.onload = function() {
        fetchProperties();
    };

    // Function to fetch all properties
    // Function to apply filters and get filtered properties using GET request
    function applyFilters() {
    const propertyType = document.getElementById("propertyType").value;
    const flatType = document.getElementById("flatType").value;
    const priceRange = document.getElementById("priceRange").value;
    const location = document.getElementById("location").value;

    let query = '?';
    if (location) query += `location=${location}&`;
    if (propertyType) query += `propertyType=${propertyType}&`;
    if (flatType) query += `flatType=${flatType}&`;
    if (priceRange) query += `priceRange=${priceRange}&`;

    query = query.slice(0, -1);

    fetch(`/filter-properties${query}`)
        .then(response => response.json())
        .then(data => {
            const listingsContainer = document.getElementById("property-listings");
            listingsContainer.innerHTML = "";

            if (!data.properties || data.properties.length === 0) {
                listingsContainer.innerHTML = `<p>No properties found for the selected filters.</p>`;
                return;
            }

            data.properties.forEach(property => {
                const propertyElement = document.createElement("div");
                propertyElement.classList.add("property-card");

                const imagesHtml = property.images.length > 0
                    ? property.images.map((img, idx) => `
                        <div class="carousel-item ${idx === 0 ? 'active' : ''}">
                            <img src="${img}" class="d-block w-100" alt="Property Image">
                        </div>`).join('')
                    : `<div class="carousel-item active">
                        <img src="default-image.jpg" class="d-block w-100" alt="Default Image">
                       </div>`;

                propertyElement.innerHTML = `
                    <div id="carousel${property._id}" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">${imagesHtml}</div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#carousel${property._id}" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#carousel${property._id}" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                    <div class="property-details">
                        <h3>${property.location} - ${property.flatType}</h3>
                        <p class="price">â‚¹${property.price.toLocaleString()}</p>
                        <p><strong>House Type:</strong> ${property.houseType}</p>
                        <p><strong>Contact:</strong> ${property.contact}</p>
                        <p><strong>E-mail:</strong> ${property.email}</p>
                        <p>${property.description}</p>
                        <div class="action-buttons">
                            <button class="btn btn-primary" onclick="openContactForm('12345')">Contact Seller</button>
                        </div>
                    </div>
                `;

                listingsContainer.appendChild(propertyElement);
            });
        })
        .catch(error => {
            console.error("Error fetching properties:", error);
        });
}


</script>    

    <script>
        // Map Initialization
        const map = L.map('map').setView([17.4266, 78.4436], 14);  // Jubilee Hills coordinates

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        const marker = L.marker([17.4266, 78.4436]).addTo(map);  // Marker at Jubilee Hills
        marker.bindPopup("<b>Jubilee Hills</b><br>Popular residential area").openPopup();

    </script>
    <script>
         function openContactForm() {
            document.getElementById('contactForm').style.display = 'block';
            document.getElementById('overlay').style.display = 'block';
        }

        // Function to close the contact form
        function closeContactForm() {
            document.getElementById('contactForm').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
        }
        function openContactForm(propertyId) {
    document.getElementById('contactForm').style.display = 'block';
    document.getElementById('overlay').style.display = 'block';
    document.getElementById('propertyId').value = propertyId; // Dynamically set property ID
}

        // Function to send contact data to the server
        function contactSeller() {
    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const email = document.getElementById('email').value.trim();
    const location = document.getElementById('contactLocation').value.trim(); // Updated to use the correct ID
    const propertyId = document.getElementById('propertyId').value;

    // Validate that all fields are filled
    if (!name || !phone || !email || !location) {
        alert('All fields are required');
        return;
    }

    // Validate phone number format
    if (!/^\d{10}$/.test(phone)) {
        alert('Phone number must be 10 digits.');
        return;
    }

    const contactData = {
        name,
        phone,
        email,
        location,
        propertyId,
    };

    fetch('/contact-seller', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify(contactData),
})
.then(response => response.json())
.then(data => {
    showAlert(data.message, 'success'); // Show success alert
    closeContactForm();
})
.catch(error => {
    console.error('Error:', error);
    showAlert('There was an error submitting your details. Please try again.', 'error'); // Show error alert
});
}
    </script>
    <!-- Contact Form Modal -->
    <!-- Overlay -->
    <div id="overlay" class="overlay" onclick="closeContactForm()"></div>

<div id="contactForm" class="contact-form" onclick="event.stopPropagation()">
    <button class="close-btn" onclick="closeContactForm()">&times;</button>
    <h3>Contact Seller</h3>
    <form id="contactFormContent">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" placeholder="Your Name" required>

        <label for="phone">Phone:</label>
        <input type="text" id="phone" name="phone" placeholder="Your Phone Number" required>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" placeholder="Your Email" required>

        <label for="contactLocation">Location:</label>
<input type="text" id="contactLocation" name="location" placeholder="Your Location" required>


        <input type="hidden" id="propertyId" name="propertyId">

        <button type="button" onclick="contactSeller()">Submit</button>
    </form>
</div>







</body>
</html>
